<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learning.cloud.user.student.dao.StudentDao">
  <resultMap id="BaseResultMap" type="com.learning.cloud.user.student.entity.Student">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="student_name" jdbcType="VARCHAR" property="studentName" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="class_id" jdbcType="INTEGER" property="classId" />
    <result column="campus_id" jdbcType="INTEGER" property="campusId" />
  </resultMap>

  <select id="getByUserId" parameterType="java.lang.String"
          resultType="com.learning.cloud.user.student.entity.Student">
    select *
    from user_student
    where user_id = #{userId}
    limit 1
  </select>

  <select id="getClassStuNum" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(id)
    from user_student
    where class_id = #{classId}
  </select>

  <select id="getClassStudents" parameterType="com.learning.cloud.dept.gradeClass.entity.GradeClass" resultType="com.learning.cloud.user.student.entity.Student">
    select *
    from user_student
    where class_id = #{id}
    order by id
  </select>

  <select id="getStudentIdListInClass" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select id
    from user_student
    where class_id = #{classId}
  </select>

  <select id="getStudentsByName" parameterType="com.learning.cloud.user.student.entity.Student" resultType="com.learning.cloud.user.student.entity.Student">
    select *
    from user_student
    where student_name like concat('%',#{studentName},'%')
  </select>

  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.learning.cloud.user.student.entity.Student">
    insert into user_student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentName != null">
        student_name,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="campusId != null">
        campus_id,
      </if>
      <if test="schoolId != null">
        school_id,
      </if>
      <if test="bureauId != null">
        bureau_id,
      </if>
      <if test="topClassId != null">
        top_class_id,
      </if>
      <if test="topStudentNo != null">
        top_student_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentName != null">
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="campusId != null">
        #{campusId,jdbcType=INTEGER},
      </if>
      <if test="schoolId != null">
        #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="bureauId != null">
        #{bureauId,jdbcType=INTEGER},
      </if>
      <if test="topClassId != null">
        #{topClassId,jdbcType=BIGINT},
      </if>
      <if test="topStudentNo != null">
       #{topStudentNo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="update" parameterType="com.learning.cloud.user.student.entity.Student">
    update user_student
    <set>
      <if test="studentName != null">
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="classId != null">
        class_id = #{classId,jdbcType=INTEGER},
      </if>
      <if test="campusId != null">
        campus_id = #{campusId,jdbcType=INTEGER},
      </if>
      <if test="schoolId != null">
        school_id = #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="bureauId != null">
        bureau_id = #{bureauId,jdbcType=INTEGER},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="topClassId != null">
        top_class_id = #{topClassId,jdbcType=BIGINT},
      </if>
      <if test="topStudentNo != null">
        top_student_no = #{topStudentNo,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>

  <delete id="delete" parameterType="java.lang.Integer">
    delete from user_student
    where id = #{id}
  </delete>

  <delete id="deleteByClassId" parameterType="java.lang.Integer">
    delete from user_student
    where class_id = #{classId}
  </delete>
</mapper>
